From 1a2093da3b46e635f99bb09d1c0ec336d8206b66 Mon Sep 17 00:00:00 2001
From: Connor McAdams <cmcadams@codeweavers.com>
Date: Fri, 19 Sep 2025 11:37:58 -0400
Subject: [PATCH] d3dx10: Handle FirstMipLevel argument in load_texture_data().

Signed-off-by: Connor McAdams <cmcadams@codeweavers.com>
---
 dlls/d3dx10_43/tests/d3dx10.c | 2 +-
 dlls/d3dx10_43/texture.c      | 9 +++++----
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/dlls/d3dx10_43/tests/d3dx10.c b/dlls/d3dx10_43/tests/d3dx10.c
index 6e5cc1bb146..2f26f8e14f1 100644
--- a/dlls/d3dx10_43/tests/d3dx10.c
+++ b/dlls/d3dx10_43/tests/d3dx10.c
@@ -4247,7 +4247,7 @@ static void test_create_texture(void)
         for (mip_level = 0; mip_level < 4; ++mip_level)
         {
             winetest_push_context("MipLevel %u", mip_level);
-            todo_wine_if(i && mip_level != 3) check_texture_sub_resource_color(tex_2d, mip_level, NULL,
+            check_texture_sub_resource_color(tex_2d, mip_level, NULL,
                     dds_24bit_8_8_mip_level_expected[min(3, mip_level + i)], 0);
             winetest_pop_context();
         }
diff --git a/dlls/d3dx10_43/texture.c b/dlls/d3dx10_43/texture.c
index 302efeccac1..cd5fc112110 100644
--- a/dlls/d3dx10_43/texture.c
+++ b/dlls/d3dx10_43/texture.c
@@ -646,8 +646,6 @@ HRESULT load_texture_data(const void *data, SIZE_T size, D3DX10_IMAGE_LOAD_INFO
     if (!data || !size)
         return E_FAIL;
 
-    if (load_info->FirstMipLevel != D3DX10_DEFAULT)
-        FIXME("load_info->FirstMipLevel is ignored.\n");
     if (load_info->Usage != D3DX10_DEFAULT)
         FIXME("load_info->Usage is ignored.\n");
     if (load_info->BindFlags != D3DX10_DEFAULT)
@@ -686,6 +684,9 @@ HRESULT load_texture_data(const void *data, SIZE_T size, D3DX10_IMAGE_LOAD_INFO
         goto end;
     }
 
+    if (load_info->FirstMipLevel == D3DX10_DEFAULT || (load_info->FirstMipLevel >= img_info.MipLevels))
+        load_info->FirstMipLevel = 0;
+
     if (load_info->Format == D3DX10_DEFAULT || load_info->Format == DXGI_FORMAT_FROM_FILE)
         load_info->Format = img_info.Format;
     fmt_desc = get_d3dx_pixel_format_info(d3dx_pixel_format_id_from_dxgi_format(load_info->Format));
@@ -722,7 +723,7 @@ HRESULT load_texture_data(const void *data, SIZE_T size, D3DX10_IMAGE_LOAD_INFO
         goto end;
 
     src_desc = get_d3dx_pixel_format_info(image.format);
-    loaded_mip_levels = min(img_info.MipLevels, load_info->MipLevels);
+    loaded_mip_levels = min((img_info.MipLevels - load_info->FirstMipLevel), load_info->MipLevels);
     for (i = 0; i < img_info.ArraySize; ++i)
     {
         struct volume dst_size = { load_info->Width, load_info->Height, load_info->Depth };
@@ -733,7 +734,7 @@ HRESULT load_texture_data(const void *data, SIZE_T size, D3DX10_IMAGE_LOAD_INFO
             const RECT unaligned_rect = { 0, 0, dst_size.width, dst_size.height };
             struct d3dx_pixels src_pixels, dst_pixels;
 
-            hr = d3dx_image_get_pixels(&image, i, j, &src_pixels);
+            hr = d3dx_image_get_pixels(&image, i, j + load_info->FirstMipLevel, &src_pixels);
             if (FAILED(hr))
                 goto end;
 
-- 
2.51.0

